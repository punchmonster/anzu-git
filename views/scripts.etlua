
function init() {
  function followButton(userHandle) {

    var button = document.querySelector(".follow-btn");

    var toggleURL = "";

    if (button.innerHTML == "Unfollow") {
      toggleURL = "/remove"
      button.innerHTML = "Follow"
    } else {
      button.innerHTML = "Unfollow"
    }

    const Url='http://yukku.org:8080/API/follow/' + userHandle + toggleURL;

    fetch(Url)
    .then(data=>{return data.json()})
    .then(res=>{console.log(res)})

  }

  function postRedirect(URL, userHandle, postID) {
    console.log(URL + userHandle + "/" + postID)
    window.location.href = URL + userHandle + "/" + postID
  }

  // searches for a parent element of certain name
  var getParent = function (elem, selector) {

  	// Element.matches() polyfill
    if (!Element.prototype.matches) {
    Element.prototype.matches = Element.prototype.msMatchesSelector ||
                                Element.prototype.webkitMatchesSelector;
    }

  	// Get the closest matching element
  	for ( ; elem && elem !== document; elem = elem.parentNode ) {
  		if ( elem.matches( selector ) ) return elem;
  	}
  	return null;

  };

  // tag button function
  const TagClick = e => {
    event.stopPropagation();
    var parent = getParent(e.target, '.post-body');

    const Url='http://yukku.org:8080/API/tags/modify/' + parent.getAttribute("data-post-id");

    fetch(Url)
    .then(data=>{return data.json()})
    .then(data=>{
      console.log(data.success)
      if (e.target.classList.contains("green-tag")) {
        e.target.classList.remove("green-tag");
      } else {
        e.target.classList.add("green-tag");
      }
    });

    console.log("tag post with ID: " + parent.getAttribute("data-post-id"));
  };

  [...document.getElementsByClassName("tag-btn")].forEach(el => {
    el.addEventListener("click", TagClick)
  });

  // like button function
  const LikeClick = e => {
    event.stopPropagation();
    var parent = getParent(e.target, '.post-body');

    const Url='http://yukku.org:8080/API/likes/modify/' + parent.getAttribute("data-post-id");

    fetch(Url)
    .then(data=>{return data.json()})
    .then(data=>{
      console.log(data.success)
      if (e.target.classList.contains("typcn-heart-outline")) {
        e.target.classList.remove("typcn-heart-outline");
        e.target.classList.add("typcn-heart-full-outline");
      } else {
        e.target.classList.remove("typcn-heart-full-outline");
        e.target.classList.add("typcn-heart-outline");
      }
    })

    console.log("like post with ID: " + parent.getAttribute("data-post-id"));
  };

  [...document.getElementsByClassName("like-btn")].forEach(el => {
    el.addEventListener("click", LikeClick)
  });

  // reply button function
  const ReplyClick = e => {
    event.stopPropagation();
    var parent = getParent(e.target, '.post-body');
    console.log("post to reply to: " + parent.getAttribute("data-post-id"));
  };

  // converting HTMLCollection to a normal Array
  // look up the ES6 spread operator if you are unfamiliar with this
  [...document.getElementsByClassName("reply-btn")].forEach(el => {
    el.addEventListener("click", ReplyClick)
  });

  // post redirection
  const PostClick = e => {
    console.log("redirect to: " + e.target.getAttribute("data-post-id"));
    if (!e.target.classList.contains('profile-item')) {

      // Get the parent with the `.post-body` class
  		var parent = getParent(event.target, '.profile-item');

      postRedirect('/', parent.getAttribute("data-post-handle"), parent.getAttribute("data-post-id"));
    } else {
      postRedirect('/', e.target.getAttribute("data-post-handle"), e.target.getAttribute("data-post-id"));
    }
  };

  [...document.getElementsByClassName("profile-item")].forEach(el => {
    el.addEventListener("click", PostClick)
  });

  // load more of the timeline
  const LoadClick = e => {
    event.stopPropagation();
    var page = e.target.getAttribute("data-post-page")
    var parent = getParent(e.target, '.profile-main');

    const Url='http://yukku.org:8080/API/posts/get_timeline/' + page;

    fetch(Url)
    .then(data=>{return data.json()})
    .then(data=>{
      frag = document.createDocumentFragment();
      data.forEach(function(element) {

        var el = document.querySelector(".profile-item")
        var profileItem = el.cloneNode(true);

        profileItem.setAttribute("data-post-id", element.postID);
        profileItem.setAttribute("data-post-handle", element.userHandle);

        if (element.userAvatar == 0) {
          profileItem.getElementsByTagName('img')[0].src = "<%- build_url() %>/static/img/profiles/default-person.jpg";
        } else {
          profileItem.getElementsByTagName('img')[0].src = "<%- build_url() %>/static/img/profiles/" + element.userID + "-avatar.jpg";
        }

        profileItem.getElementsByClassName('post-body')[0].setAttribute("data-post-id", element.postID);

        profileItem.getElementsByTagName('h4')[0].innerHTML = element.userName;
        profileItem.getElementsByTagName('a')[0].href = "/" + element.userHandle;
        profileItem.getElementsByTagName('a')[0].innerHTML = "@" + element.userHandle;
        profileItem.getElementsByTagName('span')[0].innerHTML = element.userGender;
        profileItem.getElementsByTagName('p')[0].innerHTML = element.postTime;
        profileItem.getElementsByTagName('p')[1].innerHTML = element.postBody;

        if (element.tagged == true) {
          profileItem.getElementsByTagName('i')[1].classList.add("green-tag");
        } else {
          profileItem.getElementsByTagName('i')[1].classList.remove("green-tag");
        }

        if (element.liked == true) {
          profileItem.getElementsByTagName('i')[2].classList.add("typcn-heart-full-outline");
          profileItem.getElementsByTagName('i')[2].classList.remove("typcn-heart-outline");
        } else {
          profileItem.getElementsByTagName('i')[2].classList.remove("typcn-heart-full-outline");
          profileItem.getElementsByTagName('i')[2].classList.add("typcn-heart-outline");
        }

        frag.appendChild(profileItem)

        console.log("post: " + element.userHandle + " " + element.postID);

      });
      parent.appendChild(frag)
      var d =  document.querySelector(".load-btn");
      d.setAttribute("data-post-page", page);
      d.parentNode.appendChild(d);
      init();
    })

  };

  // add event listener
  document.querySelector(".load-btn").addEventListener("click", LoadClick);


  console.log("scripts initialized");
}

init();
