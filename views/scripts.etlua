

function followButton(userHandle) {

  var button = document.querySelector(".follow-btn");

  var toggleURL = "";

  if (button.innerHTML == "Unfollow") {
    toggleURL = "/remove"
    button.innerHTML = "Follow"
  } else {
    button.innerHTML = "Unfollow"
  }

  const Url='http://yukku.org:8080/API/follow/' + userHandle + toggleURL;

  fetch(Url)
  .then(data=>{return data.json()})
  .then(res=>{console.log(res)})

}

function postRedirect(URL, userHandle, postID) {
  console.log(URL + userHandle + "/" + postID)
  window.location.href = URL + userHandle + "/" + postID
}


function likeButton(postID) {
  event.stopPropagation();

  var button = document.querySelectorAll(".post-" + postID + " .like-btn");

  const Url='http://yukku.org:8080/API/likes/modify/' + postID;

  fetch(Url)
  .then(data=>{return data.json()})
  .then(res=>{console.log(res)})
  .then(function(res) {
    button.forEach(function(buttonItem) {
      if (buttonItem.classList.contains("typcn-heart-outline")) {
        buttonItem.classList.remove("typcn-heart-outline");
        buttonItem.classList.add("typcn-heart-full-outline");
      } else {
        buttonItem.classList.remove("typcn-heart-full-outline");
        buttonItem.classList.add("typcn-heart-outline");
      }
    })
  })
}

function tagButton(postID) {
  event.stopPropagation();

  var button = document.querySelectorAll(".post-" + postID + " .tag-btn");

  const Url='http://yukku.org:8080/API/tags/modify/' + postID;

  fetch(Url)
  .then(data=>{return data.json()})
  .then(res=>{console.log(res)})
  .then(function(res) {
    button.forEach(function(buttonItem) {
      if (buttonItem.classList.contains("green-tag")) {
        buttonItem.classList.remove("green-tag");
      } else {
        buttonItem.classList.add("green-tag");
      }
    })
  });
}

var getClosest = function (elem, selector) {

	// Element.matches() polyfill
  if (!Element.prototype.matches) {
  Element.prototype.matches = Element.prototype.msMatchesSelector ||
                              Element.prototype.webkitMatchesSelector;
  }

	// Get the closest matching element
	for ( ; elem && elem !== document; elem = elem.parentNode ) {
		if ( elem.matches( selector ) ) return elem;
	}
	return null;

};

document.addEventListener('click', function (event) {
  event.stopPropagation();

	// If the clicked item is an `.reply-btn` get the parent `.accordion`
	if ( event.target.classList.contains('reply-btn') ) {

		// Get the parent with the `.post-body` class
		var parent = getClosest(event.target, '.post-body');

    console.log(parent.getAttribute("data-post-id"));

	}

}, false);


console.log("scripts initialized");
